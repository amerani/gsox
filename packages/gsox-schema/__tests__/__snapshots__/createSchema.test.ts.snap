// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should build schema 1`] = `
Object {
  "definitions": Array [
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "hello",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "String",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "name": Object {
        "kind": "Name",
        "value": "Query",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "subscription",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "Subscription",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "query",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "Query",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "name": Object {
        "kind": "Name",
        "value": "schema",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "Int",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "name": Object {
        "kind": "Name",
        "value": "Ping",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "Ping",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "Ping",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "name": Object {
        "kind": "Name",
        "value": "Subscription",
      },
    },
    Object {
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "Ping",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "Ping",
            },
          },
        },
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "Message",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "Message",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeExtension",
      "name": Object {
        "kind": "Name",
        "value": "Subscription",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "id",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "Int",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "name": Object {
        "kind": "Name",
        "value": "Ping",
      },
    },
    Object {
      "description": undefined,
      "directives": Array [],
      "fields": Array [
        Object {
          "arguments": Array [],
          "description": undefined,
          "directives": Array [],
          "kind": "FieldDefinition",
          "name": Object {
            "kind": "Name",
            "value": "content",
          },
          "type": Object {
            "kind": "NamedType",
            "name": Object {
              "kind": "Name",
              "value": "String",
            },
          },
        },
      ],
      "interfaces": Array [],
      "kind": "ObjectTypeDefinition",
      "name": Object {
        "kind": "Name",
        "value": "Message",
      },
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 432,
    "start": 0,
  },
}
`;

exports[`should output schema 1`] = `
"
            
      type Query {
            hello: String
      }
      type schema {
            subscription: Subscription
            query: Query
      }
      type Ping {
            id: Int
      }
      type Subscription {
            Ping: Ping
      }
 

            
            extend type Subscription {
Ping:Ping
Message:Message
} 

            type Ping {
	id: Int
},
type Message {
	content: String
},

      
      "
`;
